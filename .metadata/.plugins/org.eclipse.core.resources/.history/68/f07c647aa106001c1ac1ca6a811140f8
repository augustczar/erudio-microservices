package br.com.erudio.foo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import br.com.erudio.foo.exception.UnsuportedMathOperationException;
import br.com.erudio.foo.math.OperationMath;
import br.com.erudio.foo.utilNumber.ValidNumber;

@RestController
@RequestMapping(value = "/calculadora")
public class GreetingController {

	@Autowired
	private ValidNumber validNumber;
	
	@Autowired
	private OperationMath operationMath;

	@RequestMapping(value = "/sum/{numberOne}/{numberTwo}" ,method = RequestMethod.GET)
	public Double sum(@PathVariable("numberOne") String numberOne, @PathVariable("numberTwo") String numberTwo) throws Exception {
		if(!validNumber.isNumeric(numberOne) || !validNumber.isNumeric(numberTwo)) {
			throw new UnsuportedMathOperationException("Please, set a numeric value!");
		}
		Double result = operationMath.sum(validNumber.convertToDouble(numberOne), validNumber.convertToDouble(numberTwo));
		return result;
	}

	@RequestMapping(value = "/subtract/{numberOne}/{numberTwo}" ,method = RequestMethod.GET)
	public Double subtract(@PathVariable("numberOne") String numberOne, @PathVariable("numberTwo") String numberTwo) throws Exception {
		if(!validNumber.isNumeric(numberOne) || !validNumber.isNumeric(numberTwo)) {
			throw new UnsuportedMathOperationException("Please, set a numeric value!");
		}
		Double result = operationMath.subtract(validNumber.convertToDouble(numberOne), validNumber.convertToDouble(numberTwo));
		return result;
	}
	
	@RequestMapping(value = "/multiply/{numberOne}/{numberTwo}" ,method = RequestMethod.GET)
	public Double multiply(@PathVariable("numberOne") String numberOne, @PathVariable("numberTwo") String numberTwo) throws Exception {
		if(!validNumber.isNumeric(numberOne) || !validNumber.isNumeric(numberTwo)) {
			throw new UnsuportedMathOperationException("Please, set a numeric value!");
		}
		Double result = operationMath.multiply(validNumber.convertToDouble(numberOne), validNumber.convertToDouble(numberTwo));
		return result;
	}
	
	@RequestMapping(value = "/division/{numberOne}/{numberTwo}" ,method = RequestMethod.GET)
	public Double division(@PathVariable("numberOne") String numberOne, @PathVariable("numberTwo") String numberTwo) throws Exception {
		if(!validNumber.isNumeric(numberOne) || !validNumber.isNumeric(numberTwo)) {
			throw new UnsuportedMathOperationException("Please, set a numeric value!");
		}
		Double result = operationMath.division(validNumber.convertToDouble(numberOne), validNumber.convertToDouble(numberTwo));
		return result;
	}
	
	@RequestMapping(value = "/average/{numberOne}/{numberTwo}" ,method = RequestMethod.GET)
	public Double average(@PathVariable("numberOne") String numberOne, @PathVariable("numberTwo") String numberTwo) throws Exception {
		if(!validNumber.isNumeric(numberOne) || !validNumber.isNumeric(numberTwo)) {
			throw new UnsuportedMathOperationException("Please, set a numeric value!");
		}
		Double result = operationMath.average(validNumber.convertToDouble(numberOne), validNumber.convertToDouble(numberTwo));
		return result;
	}
	
	@RequestMapping(value = "/squareRoot/{numberOne}" ,method = RequestMethod.GET)
	public Double squareRoot(@PathVariable("numberOne") String numberOne) throws Exception {
		if(!validNumber.isNumeric(numberOne)) {
			throw new UnsuportedMathOperationException("Please, set a numeric value!");
		}
		Double result = operationMath.squareRoot(validNumber.convertToDouble(numberOne));
		return result;
	}
}
